{"id":"2c96410c29fdb1d886b1f92bab84e387","_format":"hh-sol-build-info-1","solcVersion":"zkVM-0.8.24-1.0.1","solcLongVersion":"zkVM-0.8.24-1.0.1","input":{"language":"Solidity","sources":{"contracts/simpleStorage.sol":{"content":"// SPDX-License-Identifirer MIT\r\npragma solidity ^0.8.24;\r\n\r\n\r\ncontract SimpleStorage{\r\n    struct Person{\r\n        int256 favouriteNumber;\r\n        string name;\r\n    }\r\n    mapping(int256 => string) public mapNameToNumber;\r\n    // this is a simpler way to get the data if only one argument is passed\r\n    // this is called mappuing, where i defined that if i put a certain number, i will get the string associated with that string\r\n    // calling the numbers in maps doesnt cost any gas when called\r\n    Person[] people;\r\n\r\n    function addPerson(string memory name, int256 number) public {\r\n        people.push(Person(number, name));\r\n        mapNameToNumber[number]= name;  //so whenever i add a new person to the array of people, i also associate that name to the number i provided\r\n        // since the mapping is declared as public, i can access the name of the associated number i provide\r\n        \r\n    }\r\n    function getPerson(uint256 number) public view returns(int256, string memory){\r\n        return(people[number].favouriteNumber, people[number].name);\r\n    }\r\n    // the issue i was encountering here is that, in [] brackets, uint is expected and i was forcing int\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"detectMissingLibraries":false,"forceEVMLA":false,"enableEraVMExtensions":false,"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/simpleStorage.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"file":"contracts/simpleStorage.sol","start":-1,"end":-1},"type":"Warning"}],"version":"0.8.24","long_version":"0.8.24+commit.3a2587f6.Linux.clang","zk_version":"1.5.6","sources":{"contracts/simpleStorage.sol":{"id":0,"ast":{"absolutePath":"contracts/simpleStorage.sol","exportedSymbols":{"SimpleStorage":[58]},"id":59,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"SimpleStorage","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":58,"linearizedBaseContracts":[58],"name":"SimpleStorage","nameLocation":"72:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SimpleStorage.Person","id":6,"members":[{"constant":false,"id":3,"mutability":"mutable","name":"favouriteNumber","nameLocation":"123:15:0","nodeType":"VariableDeclaration","scope":6,"src":"116:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2,"name":"int256","nodeType":"ElementaryTypeName","src":"116:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5,"mutability":"mutable","name":"name","nameLocation":"156:4:0","nodeType":"VariableDeclaration","scope":6,"src":"149:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4,"name":"string","nodeType":"ElementaryTypeName","src":"149:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Person","nameLocation":"99:6:0","nodeType":"StructDefinition","scope":58,"src":"92:76:0","visibility":"public"},{"constant":false,"functionSelector":"bb496938","id":10,"mutability":"mutable","name":"mapNameToNumber","nameLocation":"207:15:0","nodeType":"VariableDeclaration","scope":58,"src":"174:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int256_$_t_string_storage_$","typeString":"mapping(int256 => string)"},"typeName":{"id":9,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7,"name":"int256","nodeType":"ElementaryTypeName","src":"182:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Mapping","src":"174:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int256_$_t_string_storage_$","typeString":"mapping(int256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"192:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"id":14,"mutability":"mutable","name":"people","nameLocation":"514:6:0","nodeType":"VariableDeclaration","scope":58,"src":"505:15:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$6_storage_$dyn_storage","typeString":"struct SimpleStorage.Person[]"},"typeName":{"baseType":{"id":12,"nodeType":"UserDefinedTypeName","pathNode":{"id":11,"name":"Person","nameLocations":["505:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":6,"src":"505:6:0"},"referencedDeclaration":6,"src":"505:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$6_storage_ptr","typeString":"struct SimpleStorage.Person"}},"id":13,"nodeType":"ArrayTypeName","src":"505:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$6_storage_$dyn_storage_ptr","typeString":"struct SimpleStorage.Person[]"}},"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"590:322:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":25,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"620:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":26,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"628:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":24,"name":"Person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"613:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Person_$6_storage_ptr_$","typeString":"type(struct SimpleStorage.Person storage pointer)"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$6_memory_ptr","typeString":"struct SimpleStorage.Person memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Person_$6_memory_ptr","typeString":"struct SimpleStorage.Person memory"}],"expression":{"id":21,"name":"people","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"601:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$6_storage_$dyn_storage","typeString":"struct SimpleStorage.Person storage ref[] storage ref"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"608:4:0","memberName":"push","nodeType":"MemberAccess","src":"601:11:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Person_$6_storage_$dyn_storage_ptr_$_t_struct$_Person_$6_storage_$returns$__$attached_to$_t_array$_t_struct$_Person_$6_storage_$dyn_storage_ptr_$","typeString":"function (struct SimpleStorage.Person storage ref[] storage pointer,struct SimpleStorage.Person storage ref)"}},"id":28,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"601:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":29,"nodeType":"ExpressionStatement","src":"601:33:0"},{"expression":{"id":34,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":30,"name":"mapNameToNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"645:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int256_$_t_string_storage_$","typeString":"mapping(int256 => string storage ref)"}},"id":32,"indexExpression":{"id":31,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"661:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"645:23:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":33,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"670:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"645:29:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":35,"nodeType":"ExpressionStatement","src":"645:29:0"}]},"functionSelector":"70d464e1","id":37,"implemented":true,"kind":"function","modifiers":[],"name":"addPerson","nameLocation":"538:9:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"name","nameLocation":"562:4:0","nodeType":"VariableDeclaration","scope":37,"src":"548:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15,"name":"string","nodeType":"ElementaryTypeName","src":"548:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"number","nameLocation":"575:6:0","nodeType":"VariableDeclaration","scope":37,"src":"568:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17,"name":"int256","nodeType":"ElementaryTypeName","src":"568:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"547:35:0"},"returnParameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"590:0:0"},"scope":58,"src":"529:383:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":56,"nodeType":"Block","src":"995:78:0","statements":[{"expression":{"components":[{"expression":{"baseExpression":{"id":46,"name":"people","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1013:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$6_storage_$dyn_storage","typeString":"struct SimpleStorage.Person storage ref[] storage ref"}},"id":48,"indexExpression":{"id":47,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1020:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1013:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$6_storage","typeString":"struct SimpleStorage.Person storage ref"}},"id":49,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1028:15:0","memberName":"favouriteNumber","nodeType":"MemberAccess","referencedDeclaration":3,"src":"1013:30:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"expression":{"baseExpression":{"id":50,"name":"people","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1045:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$6_storage_$dyn_storage","typeString":"struct SimpleStorage.Person storage ref[] storage ref"}},"id":52,"indexExpression":{"id":51,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1052:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1045:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$6_storage","typeString":"struct SimpleStorage.Person storage ref"}},"id":53,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1060:4:0","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":5,"src":"1045:19:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":54,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1012:53:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_string_storage_$","typeString":"tuple(int256,string storage ref)"}},"functionReturnParameters":45,"id":55,"nodeType":"Return","src":"1006:59:0"}]},"functionSelector":"246982c4","id":57,"implemented":true,"kind":"function","modifiers":[],"name":"getPerson","nameLocation":"927:9:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"number","nameLocation":"945:6:0","nodeType":"VariableDeclaration","scope":57,"src":"937:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"936:16:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"973:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":41,"name":"int256","nodeType":"ElementaryTypeName","src":"973:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"981:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":43,"name":"string","nodeType":"ElementaryTypeName","src":"981:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"972:23:0"},"scope":58,"src":"918:155:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":59,"src":"63:1119:0","usedErrors":[],"usedEvents":[]}],"src":"33:1149:0"}}},"contracts":{"contracts/simpleStorage.sol":{"SimpleStorage":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"number","type":"int256"}],"name":"addPerson","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"number","type":"uint256"}],"name":"getPerson","outputs":[{"internalType":"int256","name":"","type":"int256"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int256","name":"","type":"int256"}],"name":"mapNameToNumber","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.24+commit.3a2587f6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"number","type":"int256"}],"name":"addPerson","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"number","type":"uint256"}],"name":"getPerson","outputs":[{"internalType":"int256","name":"","type":"int256"},{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int256","name":"","type":"int256"}],"name":"mapNameToNumber","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/simpleStorage.sol":"SimpleStorage"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"details":{"constantOptimizer":false,"cse":false,"deduplicate":false,"inliner":false,"jumpdestRemover":false,"orderLiterals":false,"peephole":false,"simpleCounterForLoopUncheckedIncrement":true,"yul":true,"yulDetails":{"optimizerSteps":"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu","stackAllocation":true}},"runs":200},"remappings":[]},"sources":{"contracts/simpleStorage.sol":{"keccak256":"0x21a412920af321b2f33cfdd7217c3b7a1a2722af738db577b7ecb671af9b98c0","urls":["bzz-raw://dd746c71688828961827fb56d2d00cfdb3e213b70fd160bf4eae13ea326ff94e","dweb:/ipfs/QmRbCwr7UYAFKj1Z4CiSoh2qhbbBxsjHE8LEt8KsPy1VvT"]}},"version":1},"zk_version":"1.5.6"},"evm":{"bytecode":{"object":""},"methodIdentifiers":{"addPerson(string,int256)":"70d464e1","getPerson(uint256)":"246982c4","mapNameToNumber(int256)":"bb496938"}},"hash":"0100009d9058641842aa8e1beb994f6ce495da88894acfaea6c847f32258d1f2","factoryDependencies":{}}}}}}